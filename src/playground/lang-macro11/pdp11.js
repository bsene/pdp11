// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
import {register, opcode} from "./tokens.ts"
export const parser = LRParser.deserialize({
  version: 14,
  states: "'[QQOPOOOcOPO'#CiOOOO'#Co'#CoOkOPO'#ChO!tOPO'#ChO#OOPO'#CrQQOPOOOOOO'#Cr'#CrO#WOPO'#CmO#]OPO,58zOOOO,59T,59TOfOPO'#CiOOOO-E6m-E6mO#wOPO,59SOOOO'#Cc'#CcO$ROPO'#CcOOOO'#Cd'#CdOOOO'#Ct'#CtO#]OPO'#CtO$dOQO'#CsOOOO'#C}'#C}O${OPO'#C}O${OPO'#C}O${OPO'#C}O%SOPO,59SOOOO,59^,59^OOOO-E6k-E6kOOOO,59X,59XOOOO1G.f1G.fO%_OPO1G.nOOOO,58},58}O%jOPO,59`O#]OPO'#CnO%oOQO,59_OOOO'#DO'#DOOOOO,59i,59iO&WOPO,59iO&`OPO,59iO|OPO'#CpO%_OPO1G.nO&eOPO7+$YOOOO'#Ce'#CeOOOO1G.z1G.zOOOO,59Y,59YOOOO-E6l-E6lOOOO1G/T1G/TOOOO,59[,59[OOOO-E6n-E6n",
  stateData: "&p~OQSOTPOZVO^SOxfP~OUXOpYO~OQ]OTZO^]OZ[Xx[X~OTaO_eOi_Oj^Ok^Ol^Om^On^Oo`OseOtfOvgO~OZ[Xx[X~P|OZiOxfX~OxkO~OTaOi_Oj^Ok^Ol^Om^On^Oo`O~OZ[ax[a~P|OjnOknOlnOmnOnnO~OYpOZgX`gXxgXogXugXwgX~OPrO~P#]O`vOZ[ax[a~O`vOZ[ix[i~OoyO~OYpOZga`gaxgaogaugawga~Ou}Ow}O~Ou}O~O`vOZ[qx[q~O",
  goto: "$[sPPPPtPPx!T!`PPt!cPPP!h!n!t!{P#V#Z#kPPPPPPPP#x$RTTOUcaSX]befgpvcbSX]befgpvRzoVQORUQUORjUQqcR|qSROUR[RQwhQxmT!PwxTWOUUdS]vQlXQobVrefg`cSX]befgvR{pQhSQm]R!OvQseQtfRug",
  nodeNames: "âš  Register Opcode Program Assignment Identifier Equals Number OpenExpr CloseExpr Operator Comment Code Label Directive Immediate Comma",
  maxTerm: 40,
  nodeProps: [
    ["closedBy", 8,"CloseExpr"],
    ["openedBy", 9,"OpenExpr"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 4,
  tokenData: "([~RhYZ!m]^!mpq!xqr!xst!}tu#Svw!xxy#kyz#pz{!x{|!x|}#}}!O$S!O!P$a!P!Q!x!Q!Y$}![!]%V!]!^%[!^!_%g!_!`%l!b!c%q!c!}#S#Q#R%v#T#o#S~!rQx~YZ!m]^!mQ!}OYQ~#SO_~~#XUT~tu#S!O!P#S!Q!R#S!c!}#S#R#S#S#T#o#S~#pOt~~#uPu~{|#x~#}Ow~~$SO`~R$XPYQxy$[P$aOvP~$dQ!c!}$j#T#o$j~$oR^~!_!`$x!c!}$j#T#o$j~$}O^~~%SPj~!Q!Y$}~%[Op~~%aQZ~OY%[Z~%[~%lOo~~%qOU~~%vOs~~%yY!d!e&i!e!f&}!f!g'S!q!r'b!z!{'p#U#V&i#V#W&}#W#X'S#c#d'b#l#m'p~&lQ!Q!R&r!R!S&r~&wQm~!Q!R&r!R!S&r~'SOi~~'VP!Q!['Y~'_Pl~!Q!['Y~'eP!Q!Y'h~'mPk~!Q!Y'h~'sR!Q!['|!c!i'|#T#Z'|~(RRn~!Q!['|!c!i'|#T#Z'|",
  tokenizers: [0, 1],
  topRules: {"Program":[0,3]},
  specialized: [{term: 5, get: (value, stack) => (register(value, stack) << 1)},{term: 5, get: (value, stack) => (opcode(value, stack) << 1)}],
  tokenPrec: 0
})
